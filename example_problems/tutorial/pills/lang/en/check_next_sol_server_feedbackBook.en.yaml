%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service}\n#  with arguments: '
feedback_source: '# The phrases used in this call of service {service} come from the file \''{service}_feedbackBook.{ENV["lang"]}.yaml\'' placed in the \''lang\'' folder of problem {problem}.'

#NOW THE PROBLEM SERVICE SPECIFIC SECTION:
different-n: 'No. The two treatments you have provided have different lengths! As such, they do not belong to the same list.'
next-ok: 'â™¥  The next_sol wff is indeed the wff that comes just after the current_sol wff (according to sorting_criterion={ENV["sorting_criterion"]}).'
next-wrong: 'No. The next_sol wff you have provided is NOT the wff coming just after the current_sol wff according to sorting_criterion={ENV["sorting_criterion"]}.'
feedback: 'The maximal prefix of your next_sol wff that is actually correct is the following:'
not-well-formed-treatment: 'We have a problem. The following treatment is out of order:'
unfeasible: 'Indeed, when you get to the \''H\'' in position {i} there is no broken pill left to be eaten. This prescription is not consistent.'
pointer: '^ no half pill is available at this point in the flask'
unfinished: 'Indeed there are {num_dangling_broken_pills} broken pills left over in the flask. This prescription is not consistent. It contains more \''I\'' than \''H\'' characters.'
