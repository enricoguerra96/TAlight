%YAML 1.2
---
open-channel: '# I will serve: problem={problem}, service={service}\n#  with arguments: '
feedback_source: '# The phrases used in this call of service {service} come from the file \''{service}_feedbackBook.{ENV["lang"]}.yaml\'' placed in the \''lang\'' folder of problem {problem}.'

#NOW THE PROBLEM SERVICE SPECIFIC SECTION:
at-least-one-line: 'No. You are required to enter at least one feasible treatment (possibly even the empty one) before closing.'
first-line-not-feasible: 'No. Your very first treatment is NOT feasible.'
wrong-first: 'No. The very first treatment you have introduced is feasible but it is not the first feasible treatment with that number of pills according to the order that has been set.'
called-with: '(service called with'
different_lengths: 'No. The treatment you have just introduced in your line {len(input_solution_list)+1} has different length than the previous ones.'
order-violation: 'No. The treatment you have just introduced in position {len(input_solution_list)+1} does not come after but rather before than the previous one according to the order set.'
repeated: 'No. The treatment you have just introduced in your line {len(input_solution_list)+1} is the same as your {input_solution_list.index(line)+1}th one. But nothing is lost: this repetition will be ignored. You can go on.'
your-treatments-all-ok: 'All the treatments you have introduced are feasible and correctly ordered.'
one-treatment-is-missing-no-feedback: 'No. Your list is missing at least one feasible treatment.'
give-missing-treatment: 'Consider for example:'
not-consecutive: 'In fact, the two feasible treatments:\n {input_solution_list[pos-1]}\n {input_solution_list[pos]}\nthat appear consecutive in your list are NOT consecutive in the intended order'
first-missing-prefix: 'As a strong hint, here is the prefix of a feasible treatment and no treatment in your list has this prefix:'
list-ok: 'You have listed all feasible treatments with {n_pills} pills. Also their order is the intended one.'
not-well-formed-treatment: 'We have a problem. The following treatment is out of order:'
unfeasible: 'Indeed, when you get to the \''H\'' in position {i} there is no broken pill left to be eaten. This prescription is not consistent.'
pointer: '^ no half pill is available at this point in the flask'
unfinished: 'Indeed there are {num_dangling_broken_pills} broken pills left over in the flask. This prescription is not consistent. It contains more \''I\'' than \''H\'' characters.'
